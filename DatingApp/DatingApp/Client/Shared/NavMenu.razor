@inject HttpClient _httpClient
@inject NavigationManager _navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Dev_Date<span class="oi oi-heart"> </span></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        <AuthorizeView>
            <Authorized>
                <!--<div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </div> -->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="matches">
                        <span class="oi oi-people" aria-hidden="true"></span> Matches
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="fetchdata">
                        <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Search
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="profile">
                        <span class="oi oi-person" aria-hidden="true"></span> Profile
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogoutUser()
    {

        await _httpClient.GetAsync("user/logoutuser");

        _navigationManager.NavigateTo("/", true);
    }
}
