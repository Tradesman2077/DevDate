@page "/profile"
@using DatingApp.ViewModels
@using System.Security.Claims
@inject HttpClient HttpClient
@inject ProfileViewModel _profileViewModel
@inject IToastService _toastService
@inject NavigationManager _navigationManager

<PageTitle>Your Profile</PageTitle>
<h1>Profile</h1>

<div class="row col-12">
    <div class="col-4">
        <img src="@_profileViewModel.PhotoUrl" style="max-width: 100%; height: auto;">
        <br>
        <div class="input_container" >
            <InputFile OnChange="@OnInputFileChanged" id="fileUpload"></InputFile>
        </div>
    </div>
    <br>
    <div class="col-8">
        <label for="username">UserName:</label>
        <input type="text" @bind-value="_profileViewModel.Username" class="form-control" placeholder="Username">
        <br/>
        <label for="city">City:</label>
        <input type="text" @bind-value="_profileViewModel.City" class="form-control" placeholder="Location">
        <br/>
        <label for="Favourite Language">Favourite language:</label>
        <input type="text" @bind-value="_profileViewModel.FavouriteLanguage" class="form-control" placeholder="Favourite language">
        <br/>
        <button type="submit" @onclick="_profileViewModel.UpdateUser">Update profile</button>
    </div>
</div>
<br>

@code
{
     [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEvent)
    {
        //photo upload
        var file = inputFileChangeEvent.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);
       _profileViewModel.PhotoUrl = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";

    }
    protected override async Task OnInitializedAsync() 
    {
        var authState = await authenticationState;//_authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(user.Identity.IsAuthenticated)
        {
            var claim = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
            _profileViewModel.Id = Convert.ToInt64(claim?.Value) ;
            await _profileViewModel.GetUser();
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }
    }

}